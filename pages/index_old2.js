import { useState } from "react";
import Layout from '../src/components/Layout';
import Head from 'next/head';
import { Web3ReactProvider, useWeb3React } from "@web3-react/core";
//import { ToastContainer, toast, ToastOptions } from "react-toastify";
import { ConnectModal } from '../src/wallet-integration-ui-main/components/ConnectModal';
import { AccountInformation } from '../src/wallet-integration-ui-main/components/AccountInformation';

function App() {
  const context = useWeb3React();
  const {
    connector,
    library,
    chainId,
    account,
    activate,
    deactivate,
    active,
    error,
  } = context;
  console.log(context);


  
  return (
    <>
      {/* <ToastContainer
        theme="dark"
        style={{ width: "400px" }}
        toastClassName="font-bold bg-transparent bg-opacity-80 backdrop-blur-[3px] border-[1px] border-[#23263D] rounded-[10px] w-2xl"
        toastStyle={{ background: "rgba(4, 5, 14, 0.82)" }}
      /> 
      {open ? (
        <ConnectModal setOpen={setOpen} walletSelected={walletSelected} />
      ) : (
        ""
      )}
      <div className="w-full md:h-screen h-screen flex flex-wrap justify-center md:items-center items-start bg-[#04050E] md:gap-20 gap-0">
        <div className="flex flex-col  w-full justify-center items-center px-4">
          {isLoggedIn && account ? <AccountInformation /> : ""}
        </div>

        {isLoggedIn ? (
          <button
            className="border-4 md:mt-16 mt-0 uppercase text-[#3BFF7E] font-semibold border-[#3BFF7E] w-[60%] h-[60px] rounded-[53px]"
            onClick={() => {
              let signer = library.getSigner(account);
            }}
            >
              Mint
            </button>
          ) : (
            <button
              className="border-4 md:mt-16 mt-0 uppercase text-[#3BFF7E] font-semibold border-[#3BFF7E] w-[60%] h-[60px] rounded-[53px]"
              onClick={(e) => setOpen(true)}
            >
              Connect Wallet
            </button>
          )}
        </div> */}
    </>
  )
}


function getLibrary(provider) {
  const library = new Web3Provider(provider);
  library.pollingInterval = 12000;
  return library;
}

export default function Home() {

  const [open, setOpen] = useState(false);
  const [isLoggedIn, setLoggedIn] = useState(false);
  const walletSelected = (wallet) => {
    //wallet selected is in wallet
    console.log(wallet);
    setLoggedIn(true);
  };

  return (
    <Web3ReactProvider getLibrary={getLibrary}>
    <App />
    <main className='d-flex flex-column min-vh-100 text-secondary>'>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Layout>
        <h1 className="text-secondary">Home</h1>
        <ConnectModal setOpen={setOpen} walletSelected={walletSelected} />
      </Layout>
    </main>
    </Web3ReactProvider>
  );
}